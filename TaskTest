using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;

namespace Task
{
    class Program
    {
        static Stopwatch Stopwatch;
        static void Main(string[] args)
        {
             Stopwatch = Stopwatch.StartNew(); //creates and start the instance of Stopwatch
                                                        //your sample code
            //System.Threading.Thread.Sleep(500);
           
           
           

            for (int i = 0; i < 5; i++)
            {
                Console.WriteLine("1 " + "Time:" + Stopwatch.ElapsedMilliseconds);
                method();
                method4();
                Console.WriteLine("3 " + "Time:" + Stopwatch.ElapsedMilliseconds);
                Console.WriteLine("Loop {0} Finished ", i);
            }

            Console.WriteLine("Out! : " + Stopwatch.ElapsedMilliseconds);
            ////WebClient client = new WebClient();
            Stopwatch.Stop();
            //var client = new WebClient();
            //var content = client.DownloadString("http://google.com");
            //var arr = client.DownloadData("http://google.com");


            //string str = System.Text.Encoding.UTF8.GetString(arr);
            //Console.WriteLine(str);


            //Console.WriteLine(content);

            Console.ReadKey();
        }

        static async Task<string> method()
        {
            var client = new WebClient();
            var x = client.DownloadString("http://google.com");
            await Task<string>.Delay(1000);
            Console.WriteLine("2 " + "Time:" + Stopwatch.ElapsedMilliseconds);
            return "Finished";
        }
        static async Task<string> method4()
        {
            var client = new WebClient();
            var x = client.DownloadString("http://google.com");
            await Task<string>.Delay(1000);
            Console.WriteLine("4 " + "Time:" + Stopwatch.ElapsedMilliseconds);
            return "Finished";
        }



    }
}
